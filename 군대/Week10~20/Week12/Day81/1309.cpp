#include <iostream>

using namespace std;

int n;
int dp[3][100001];

int main(void)
{
    // 가로로 2칸, 세로로 n칸
    cin >> n;
    // 아예 채워넣지 않는 것도 하나의 경우의 수
    // 세로, 가로 모두 붙어있으면 안됨
    // 다이나믹 프로그래밍으로 풀면 될듯
    // 우리를 채우는 경우의 수는 
    /*
        10  01  00 의 3가지가 있음 
        10의 경우에는 다음에 01,00의 2가지 경우가 올 수 있음 0
        01의 경우에는 다음에 10,00의 2가지 경우가 올 수 있음 1
        00의 경우에는 3가지 경우가 가능함 2
    */
    dp[0][1] = 1;
    dp[1][1] = 1;
    dp[2][1] = 1;
    for(int i = 2; i <= n; i++)
    {
        dp[0][i] = (dp[1][i-1] + dp[2][i-1]) % 9901;
        dp[1][i] = (dp[0][i-1] + dp[2][i-1]) % 9901;
        dp[2][i] = (dp[1][i-1] + dp[0][i-1] + dp[2][i-1]) % 9901; 
    }
    cout << (dp[0][n] + dp[1][n] + dp[2][n]) % 9901 << '\n';
    return 0;
}